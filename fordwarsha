
#include<stdio.h>


int V ;


#define INF 99999


void printSolution(int dist[][V]);


void floydWarshall (int graph[][V])
{

    int dist[V][V], i, j, k;


    for (i = 0; i < V; i++)
        for (j = 0; j < V; j++)
            dist[i][j] = graph[i][j];


    for (k = 0; k < V; k++)
    {
        
        for (i = 0; i < V; i++)
        {
            
            for (j = 0; j < V; j++)
            {
                if (dist[i][k] + dist[k][j] < dist[i][j])
                    dist[i][j] = dist[i][k] + dist[k][j];
            }
        }
    }


    printSolution(dist);
}


void printSolution(int dist[][V])
{
    
    for (int i = 0; i < V; i++)
    {
        for (int j = 0; j < V; j++)
        {
            if (dist[i][j] == INF)
                printf("%s ", "INF");
            else
                printf ("%d ", dist[i][j]);
        }
        printf("\n");
    }
}

int main()
{

    scanf("%d",&V);
    int graph[V][V];
    
    for(int i=0;i<V;i++)
        for(int j=0; j<V;j++)
            scanf("%d", &graph[i][j]);
    floydWarshall(graph);
    return 0;
}
